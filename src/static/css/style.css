/* --- 1. フォントの読み込み --- */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Sawarabi+Gothic&display=swap');

/* Global & Body */
body {
    color: #1f2937; /* text-gray-800 */
    font-family:"Sawarabi Gothic", 'Inter', sans-serif;

    /* ▼▼▼ 動くグラデーションのために追加 ▼▼▼ */
    background: linear-gradient(-45deg, #f6f3db, #f6dee8, #daedf5, #d4efe0);
    background-size: 400% 400%;
    animation: gradientAnimation 15s ease infinite;
}

/* Container */
.container {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    padding: 1rem; /* p-4 */
}
@media (min-width: 640px) { .container { max-width: 640px; padding: 1.5rem; } }
@media (min-width: 1024px) { .container { max-width: 1024px; padding: 2rem; } }

/* Header */
header {
    text-align: center; /* text-center */
    margin-bottom: 1rem; /* mb-8 */
}
header h1 {
    font-size: 1.875rem; /* text-3xl */
    font-weight: 700; /* font-bold */
    color: #111827; /* text-gray-900 */
}
/* sm (640px) and up */
@media (min-width: 640px) {
    header h1 {
        font-size: 2.25rem; /* sm:text-4xl */
        line-height: 2rem;
    }
}
header h1 img {
  width: 230px; /* お好みの幅に調整してください */
  height: auto;   /* 高さは自動調整にして、画像の縦横比を保ちます */
}

header p {
    margin-top: 0.5rem; /* mt-2 */
    color: #4b5563; /* text-gray-600 */
    font-size: 20px; /* ← この行を追記 (14pxに相当) */
    line-height: 1.25rem; /* ← 行の高さを指定すると読みやすくなります */
}

/* Upload Box */
.upload-box {
    max-width: 36rem;
    margin-left: auto;
    margin-right: auto;
    background-color: #ffffff;
    border-radius: 0.75rem;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    padding: 1.5rem;
}
@media (min-width: 640px) { .upload-box { padding: 2rem; } }
.upload-box h2 {
    font-size: 1.5rem;
    line-height: 2rem;
    font-weight: 600;
    margin-bottom: 1rem;
    text-align: center;
}
.upload-area {
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* File Input Label */
label[for="imageInput"] {
    width: 100%;
    margin-bottom: 1rem;
    padding: 1.5rem;
    border-width: 2px;
    border-style: dashed;
    border-color: #d1d5db;
    border-radius: 0.5rem;
    text-align: center;
    cursor: pointer;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
    position: relative;
}

label[for="imageInput"]:hover {
    border-color: #3b82f6;
    background-color: #f9fafb;
}

label[for="imageInput"].dragging {
    border-color: #3b82f6;
    background-color: #f9fafb;
}
label[for="imageInput"].busy {
    border-color: #ef4444; 
    background-color: #fef2f2;
    cursor: not-allowed;
}

label[for="imageInput"] svg {
    margin-left: auto;
    margin-right: auto;
    height: 3rem;
    width: 3rem;
    color: #9ca3af;
}
#fileName {
    margin-top: 0.5rem;
    display: block;
    font-size: 0.875rem;
    line-height: 1.25rem;
    font-weight: 500;
    color: #4b5563;
}
label[for="imageInput"] .file-type-info {
    font-size: 0.75rem;
    line-height: 1rem;
    color: #6b7280;
}
input[type="file"]#imageInput {
    display: none;
}

/* Upload Button */
#uploadButton {
    width: 100%;
    background-color: #2563eb;
    color: #ffffff;
    font-weight: 700;
    padding: 0.75rem 1rem;
    border-radius: 0.5rem;
    border: none;
    cursor: pointer;
    transition-property: background-color, transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
}
#uploadButton:hover {
    background-color: #1d4ed8;
    transform: scale(1.05);
}
#uploadButton:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
    box-shadow: 0 0 0 2px #ffffff, 0 0 0 4px #3b82f6;
}
#uploadButton:disabled {
    background-color: #cccccc;
    transform: none;
    cursor: not-allowed;
}

/* Horizontal Rule */
hr {
    margin-top: 2.5rem;
    margin-bottom: 2.5rem;
    border: 0;
    border-top: 1px solid #d1d5db;
}

/* Gallery Section */
#gallery-section h2 {
    font-size: 1.5rem;
    line-height: 2rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
    text-align: center;
}
#gallery {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    gap: 1.5rem;
}
#gallery-placeholder {
    grid-column: 1 / -1;
    text-align: center;
    color: #6b7280;
}

/* 通知メッセージ（トースト）のスタイル */
.toast {
    visibility: hidden;
    min-width: 250px;
    background-color: #333;
    color: #fff;
    text-align: center;
    border-radius: 8px;
    padding: 16px;
    position: fixed;
    z-index: 20; /* ローダーより手前に表示 */
    left: 50%;
    transform: translateX(-50%);
    bottom: 30px;
    opacity: 0;
    transition: opacity 0.5s, visibility 0s 0.5s; 
}
.toast.show {
    visibility: visible;
    opacity: 1;
    transition: opacity 0.5s;
}

.loader {
    /* 親要素(label)を基準に絶対配置する */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    /* 半透明の背景で下の要素を覆う */
    background-color: rgba(255, 255, 255, 0.85);
    
    /* 輪っかを中央に配置するためのFlexbox設定 */
    display: none; /* JSで 'flex' に切り替えて表示 */
    align-items: center;
    justify-content: center;

    /* 表示の階層を調整 */
    z-index: 10;
    
    /* 親要素の角丸に合わせる */
    border-radius: 0.5rem;
}

/* 輪っか自体は疑似要素で描画する */
.loader::after {
    content: '';
    display: block;
    width: 50px;
    height: 50px;
    
    border: 5px solid #f3f3f3; /* 輪っかの薄い部分 */
    border-top-color: #3498db; /* 輪っかの濃い青の部分 */
    border-radius: 50%; /* 正円にする */

    animation: spin 1s linear infinite;
}

/* 'spin'アニメーションの定義（0度から360度まで回転させる） */
@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* --- 4. 動的に生成されるギャラリーアイテムのスタイル --- */
.gallery-item {
    background-color: #ffffff;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    overflow: hidden;
}
.gallery-item img {
    width: 100%;
    height: auto;
    object-fit: contain;
    display: block;
}

/* --- 5. 動くグラデーション背景のためのアニメーション定義 --- */
@keyframes gradientAnimation {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}